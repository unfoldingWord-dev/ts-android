apply plugin: 'com.android.application'

android {
    signingConfigs {
    }
    compileSdkVersion 21
    buildToolsVersion '21.1.2'
    defaultConfig {
        applicationId "com.translationstudio.androidapp"
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 86
        versionName "2.2.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def apk = output.outputFile;
                def newName = "tS_"+defaultConfig.versionName+"_build"+defaultConfig.versionCode+".apk";
                output.outputFile = new File(apk.parentFile, newName);
            }
        }
    }
    lintOptions {
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
    }
    // we could build platform specific apks this way
//    productFlavors {
//        x86 {
//            ndk {
//                versionCode Integer.parseInt("6" + defaultConfig.versionCode)
//                abiFilter "x86"
//            }
//        }
//        mips {
//            ndk {
//                versionCode Integer.parseInt("4" + defaultConfig.versionCode)
//                abiFilter "mips"
//            }
//        }
//        armv7 {
//            ndk {
//                versionCode Integer.parseInt("2" + defaultConfig.versionCode)
//                abiFilter "armeabi-v7a"
//            }
//        }
//        arm {
//            ndk {
//                versionCode Integer.parseInt("1" + defaultConfig.versionCode)
//                abiFilter "armeabi"
//            }
//        }
//        fat
//    }
// or this way (which is cleaner)
//    splits {
//        abi {
//            enable true
//            universalApk true
//        }
//    }
//    project.ext.versionCodes = ['armeabi':1, 'armeabi-v7a':2, 'arm64-v8a':3, 'mips':5, 'mips64':6, 'x86':8, 'x86_64':9]
//    android.applicationVariants.all { variant ->
//        // assign different version code for each output
//        variant.outputs.each { output ->
//            output.versionCodeOverride =
//                    project.ext.versionCodes.get(output.getFilter(com.android.build.OutputFile.ABI), 0) * 1000000 + android.defaultConfig.versionCode
//        }
//    }
}

//allprojects {
//    gradle.projectsEvaluated {
//        tasks.withType(JavaCompile) {
//            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
//        }
//    }
//}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile files('libs/json-simple-1.1.1.jar')
    compile files('libs/core-1.51.0.0.jar')
    compile files('libs/prov-1.51.0.0.jar')
    compile 'com.android.support:appcompat-v7:21.0.3'
    compile 'com.android.support:support-v13:21.0.3'
    compile 'com.loopj.android:android-async-http:1.4.5'
    compile 'com.google.code.gson:gson:2.3'
    compile 'org.eclipse.jgit:org.eclipse.jgit:3.5.0.201409071800-rc1'
    compile 'com.jcraft:jsch:0.1.51'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.3'
    compile 'com.squareup:otto:1.3.5'
    compile 'com.android.support:support-v4:21.0.3'
    compile 'org.kamranzafar:jtar:2.2'
    compile 'com.jpardogo.materialtabstrip:library:1.0.8'
    compile 'org.apache.directory.studio:org.apache.commons.io:2.4'
    compile 'com.google.guava:guava:18.0'
    compile project(':html-textview')
    compile project(':com.door43.tools.reporting')
    compile project(':com.door43.tools.security')
    androidTestCompile 'com.jayway.android.robotium:robotium-solo:5.2.1'
}